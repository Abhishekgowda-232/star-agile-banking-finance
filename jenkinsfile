pipeline {
    agent any

    tools {
        // Install the Maven version configured as "M3" and add it to the path.
        maven "M2_HOME"
    }
    
    stages {
        stage('Build') {
            steps {
                // Get some code from a GitHub repository
                git 'https://github.com/StarAgileDevOpsTraining/star-agile-banking-finance.git'

                // Run Maven on a Unix agent.
                sh "mvn -Dmaven.test.failure.ignore=true clean package"

            }    
      }
    stage("Generate Test Reports") {
        steps {
           publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: '/var/lib/jenkins/workspace/Health care project/target/surefire-reports', reportFiles: 'index.html', reportName: 'HTML Report', reportTitles: '', useWrapperFileDirectly: true])
                }         
        }
    stage('create Docker image') {
       steps { 
           sh 'docker build -t abhishekalur/banking-project-demo:1.0 .'
                } 
            }
    stage('Docker-Login') {
      steps {
          withCredentials([usernamePassword(credentialsId: 'c4ee4851-160c-4084-9ade-031d6446f941', passwordVariable: 'dockerpassword', usernameVariable: 'dockerlogin')]) {
          sh 'docker login -u ${dockerlogin} -p ${dockerpassword}'
                              }
                  }
            }
    stage ('push-image') {
        steps {
           sh 'docker push abhishekalur/banking-project-demo:1.0'
                 }
           }
    stage('Config & Deployment') {
        steps {
            withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'AwsAcess key', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
            dir('terraform-files') {
            sh 'sudo chmod 600 gowda.pem'
            sh 'terraform init'
            sh 'terraform validate'
            sh 'terraform apply --auto-approve'
}
   }
}
}
}
}
